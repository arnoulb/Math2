#!/usr/bin/ruby
# coding: utf-8

if ( ARGV.length != 2 || ARGV[0] == '-h')
  STDERR.puts "USAGE"
  STDERR.puts "\t./202unsold a b\n\n"
  STDERR.puts "DESCRITPION"
  STDERR.puts "\ta\tconstant computed from the past results"
  STDERR.puts "\tb\tconstant computed from the past results"
  exit (84)
else
  a = ARGV[0].to_i
  b = ARGV[1].to_i
  if (a <= 50 || b <= 50)
    STDERR.puts "Wrong usage, a and b must be numbers"
    exit (84)
  end
  puts "-" * 40
  value = Array.new(7){Array.new(7)}
  value[0][1..5] = Array.new((10..50).step(10).to_a)
  
# Remplissage premiÃ¨re ligne
  (10..50).step(10).each do |i|
    value[0][i/10] = "X=#{i}"
  end
  value[0][6] = "Y law"

  value[6][0..6] = Array.new(7,0)
  value[6][0] = "X law"
  (10..50).step(10).each do |y|
    tot = 0
    value[y/10][0] = "Y=#{y}"
    (10..60).step(10).each do |x|
      value[y/10][x/10] = ((a-x) * (b - y))/((5*a-150.0)*(5*b-150.0))
      tot += value[y/10][x/10]
      if x == 60
        value[y/10][x/10] = tot
      end
      value[6][x/10] += value[y/10][x/10]
    end
  end
  for i in 0..6
    for j in 0..6
      if (value[i][j] == nil)
        print "\t"
      elsif i == 0 || j == 0
        print (j == 6) ? "#{value[i][j]}\n" : "#{value[i][j]}\t"
      else
        print ((j == 6) ? ((value[i][j] == 1) ? "%.0f\n" : "%.3f\n" ):((value[i][j] == 1) ? "%.0f\t" : "%.3f\t")) % value[i][j]
      end
    end
  end
  puts "-" * 40

  print "z\t20\t30\t40\t50\t60\t70\t80\t90\t100\ttotal\np(Z=z)"
  value2 = Array.new(10, 0)
  for x in 1..5
    for y in 1..5
      value2[(x - 1) + (y - 1)] += value[x][y]
      value2[9] += value[x][y]
    end
  end
  for i in 0...10
    print ((value2[i] == 1) ? "\t%.0f" :"\t%.3f") % value2[i]
  end
  print "\n"

  puts "-" * 40

  exp = Array.new(3, 0)
  for i in 1..5
    exp[0] += i * 10 * value[6][i]
    exp[1] += i * 10 * value[i][6]
  end

  var = Array.new(3, 0)
  for i in 1..5
    var[0] += (i * 10 - exp[0]) * (i * 10 - exp[0]) * value[6][i]  
    var[1] += (i * 10 - exp[1]) * (i * 10 - exp[1]) * value[i][6]  
  end

  for i in 1...10
    exp[2] += (i + 1) * 10 * value2[i - 1]
  end
  for i in 1...10
    var[2] += ((i + 1) * 10 - exp[2]) * ((i + 1) * 10 - exp[2]) * value2[i - 1]
  end
  
  puts "expected value of X:\t%.1f" % exp[0]
  puts "variance of X:\t\t%.1f" % var[0]
  puts "expected value of Y:\t%.1f" % exp[1] 
  puts "variance of Y:\t\t%.1f" % var[1]
  puts "expected value of Z:\t%.1f" % exp[2]
  puts "variance of Z:\t\t%.1f" % var[2]
  puts "-" * 40
  exit (0)
end
